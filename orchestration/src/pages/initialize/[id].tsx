import { supabase } from "@/supabase-client"
import Head from "next/head"
import { useRouter } from "next/router"
import { useEffect, useState } from "react"

import { Composition } from "../../../../shared/types/composition"

// import styles from '@/styles/Home.module.css'

export interface ProcessInput {
  id: string
  label: string
  description?: string
  type: string
}

export type InitializationRequirements = ProcessInput[]

export default function Initialize() {
  const router = useRouter()
  const { id } = router.query

  const [composition, setComposition] = useState<Composition>()

  const processInputs: ProcessInput[] = [
    {
      id: "firstInput",
      label: "First Input",
      description: "This is a first input",
      type: "NetworkTopology",
    },
    {
      id: "secondInput",
      label: "Second Input",
      description: "This is a second input",
      type: "ConsumerDemands",
    },
  ]

  async function getComposition(id: string) {
    const { data, error } = await supabase
      .from("compositions")
      .select("*")
      .eq("id", id)

    console.log(data, error)

    setComposition((data as Composition[])[0])
  }

  useEffect(() => {
    if (id) {
      getComposition(id as string)
    }
  }, [id])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1>Initialize "{composition?.name}"</h1>
        {processInputs.map((i) => (
          <div key={i.id} style={{ display: "flex", flexDirection: "column" }}>
            <label htmlFor={i.id}>{i.label}</label>
            <input id={i.id} />
            <p>{i.description}</p>
          </div>
        ))}
      </main>
    </>
  )
}
